{"version":3,"sources":["webpack:///./src/templates/mdTemplate.js","webpack:///./src/components/sidenav.js","webpack:///./src/components/subnav.js"],"names":["_gctools_components_react_i18n_translation_webpack__WEBPACK_IMPORTED_MODULE_5___default","_ref","data","eng","fr","path","frontmatter","renderAst","rehype_react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_0___default","components","badge","reactstrap__WEBPACK_IMPORTED_MODULE_2__","Compiler","_components_layout__WEBPACK_IMPORTED_MODULE_4__","u","i","xs","_components_sidenav__WEBPACK_IMPORTED_MODULE_3__","localizer","lang","className","htmlAst","pageQuery","__webpack_exports__","_gctools_components_react_i18n_translation_webpack__WEBPACK_IMPORTED_MODULE_6___default","props","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","b","query","render","subNameEn","subNameFr","subGroup","subPieces","split","edges","forEach","node","subnav","push","_subnav__WEBPACK_IMPORTED_MODULE_8__","files","nameEn","nameFr","length","reactstrap__WEBPACK_IMPORTED_MODULE_7__","r","vertical","_public_static_d_4163922871_json__WEBPACK_IMPORTED_MODULE_2__","Subnav","_this","_React$Component","call","this","toggle","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default","state","dropdownOpen","setState","prevState","_this$props","sortedFiles","sort","parseInt","react__WEBPACK_IMPORTED_MODULE_4___default","p","q","onClick","style","border","j","isOpen","map","active","padding-left","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","activeStyle","color","title","Component","m","e","default","availableLanguages"],"mappings":"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","file":"component---src-templates-md-template-js-540b5fe33bb064818d9b.js","sourcesContent":["import React from 'react';\nimport rehypeReact from 'rehype-react';\nimport { Badge } from 'reactstrap';\nimport { graphql } from 'gatsby';\n\nimport Sidenav from '../components/sidenav';\nimport Layout from '../components/layout';\nimport LocalizedComponent\n  from '@gctools-components/react-i18n-translation-webpack';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst Template = ({\n  data, // this prop will be injected by the GraphQL query below.\n}) => {\n  const { eng, fr } = data; // data.markdownRemark holds our post data\n  const { frontmatter: { path } } = eng;\n  const renderAst = new rehypeReact({\n    createElement: React.createElement,\n    components: { badge: Badge },\n  }).Compiler;\n  return (\n    <Layout>\n      <Row>\n        <Col xs=\"3\">\n          <Sidenav path={path} />\n        </Col>\n        <Col>\n          {(localizer.lang === \"en_CA\") ?\n            <div className=\"col-sm\">{renderAst(eng.htmlAst)}</div> :\n            <div className=\"col-sm\">{renderAst(fr.htmlAst)}</div>\n          }\n        </Col>\n      </Row>\n    </Layout>\n  );\n}\n\nexport default LocalizedComponent(Template);\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    eng:markdownRemark(frontmatter: { path: { eq: $path }, lang: {eq: \"en\"} }) {\n      html\n      htmlAst\n      frontmatter {\n        path\n        lang\n      }\n    }\n    fr:markdownRemark(frontmatter: { path: { eq: $path }, lang: {eq: \"fr\"} }) {\n      html\n      htmlAst\n      frontmatter {\n        path\n        lang\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport LocalizedComponent\n  from '@gctools-components/react-i18n-translation-webpack';\nimport {\n  Nav,\n  NavItem,\n} from 'reactstrap';\nimport Subnav from './subnav';\n\nconst Sidenav = (props) => (\n\n  <StaticQuery query={graphql`\n        query{\n          component:allMarkdownRemark(\n            filter: {\n              frontmatter: {path: {regex: \"/\\/component\\//\"}}\n            },\n            sort:{\n              fields:[frontmatter___subnav]\n            }\n          ){\n            totalCount\n              edges{\n                node {\n                  frontmatter {\n                    title\n                    path\n                    lang\n                    subnav\n                  }\n                }\n            }\n          }\n          overview:allMarkdownRemark(\n            filter: \n              {frontmatter: {path: {regex: \"/\\/overview\\//\"}}\n            },\n            sort:{\n              fields:[frontmatter___subnav]\n            }\n          ){\n            totalCount\n              edges{\n                node {\n                  frontmatter {\n                    title\n                    path\n                    lang\n                    subnav\n                  }\n                }\n            }\n          }\n          content:allMarkdownRemark(\n            filter: \n            {frontmatter: {path: {regex: \"/\\/content\\//\"}}\n            },\n            sort:{\n              fields:[frontmatter___subnav]\n            }\n          ) {\n            totalCount\n              edges{\n                node {\n                  frontmatter {\n                    title\n                    path\n                    lang\n                    subnav\n                  }\n                }\n            }\n          }\n          identity:allMarkdownRemark(\n            filter: {\n              frontmatter: {path: {regex: \"/\\/identity\\//\"}}\n            },\n            sort:{\n              fields:[frontmatter___subnav]\n            }\n          ) {\n            totalCount\n              edges{\n                node {\n                  frontmatter {\n                    title\n                    path\n                    lang\n                    subnav\n                  }\n                }\n            }\n          }\n          data:allMarkdownRemark(\n            filter: {\n              frontmatter: {path: {regex: \"/\\/data\\//\"}}\n            },\n            sort:{\n              fields:[frontmatter___subnav]\n            }\n          ){\n            totalCount\n              edges{\n                node {\n                  frontmatter {\n                    title\n                    path\n                    lang\n                    subnav\n                  }\n                }\n            }\n          }\n        }\n    `}\n    render={(data) => {\n\n      let subNameEn = \"\";\n      let subNameFr = \"\";\n      let subGroup = [];\n      let subPieces = [];\n      data[props.path.split(\"/\")[1]].edges.forEach((edges) => {\n        if (edges.node.frontmatter.subnav.split(\"/\")[1] !== subNameEn) {\n          if (subNameEn !== \"\") {\n            subPieces.push(\n              <Subnav\n                files={subGroup}\n                nameEn={subNameEn}\n                nameFr={subNameFr}\n                path={props.path}\n              />\n            );\n          }\n          subGroup = [];\n          subNameEn = edges.node.frontmatter.subnav.split(\"/\")[1];\n          subNameFr = edges.node.frontmatter.subnav.split(\"/\")[2];\n        }\n        subGroup.push(edges);\n      });\n      if (subGroup.push.length !== 0) {\n        subPieces.push(\n          <Subnav\n            files={subGroup}\n            nameEn={subNameEn}\n            nameFr={subNameFr}\n            path={props.path}\n          />\n        );\n      }\n      return (\n        <div>\n          <Nav vertical>\n            {subPieces}\n          </Nav>\n        </div>\n      )\n    }}\n  />\n);\n\nexport default LocalizedComponent(Sidenav);\n\n","import React, { Component } from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\nimport LocalizedComponent\n\tfrom '@gctools-components/react-i18n-translation-webpack';\nimport {\n\tNav,\n\tNavbar,\n\tNavItem,\n\tNavbarBrand,\n\tNavbarToggler,\n\tUncontrolledCollapse,\n\tButton,\n\tCollapse,\n\tDropdown,\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem,\n\tListGroup,\n\tListGroupItem\n} from 'reactstrap';\n\n\nclass Subnav extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.toggle = this.toggle.bind(this);\n\t\tthis.state = {\n\t\t\tdropdownOpen: false\n\t\t};\n\t}\n\n\ttoggle() {\n\t\tthis.setState(prevState => ({\n\t\t\tdropdownOpen: !prevState.dropdownOpen\n\t\t}));\n\t}\n\trender() {\n\t\tconst {\n\t\t\tfiles,\n\t\t\tnameEn,\n\t\t\tnameFr,\n\t\t\tpath } = this.props;\n\n\t\tconst sortedFiles = files.sort((a, b) =>\n\t\t\tparseInt(a.node.frontmatter.subnav.split('/')[3], 10) - parseInt(b.node.frontmatter.subnav.split('/')[3], 10))\n\t\t\t;\n\t\t//console.log(sortedFiles);\n\t\treturn (\n\t\t\t<ListGroup>\n\t\t\t\t<ListGroupItem onClick={this.toggle} className=\"dropdown-toggle\" style={{\"border\": \"0px\"}}>\n\t\t\t\t\t{(localizer.lang === \"en_CA\") ? nameEn : nameFr}\n\t\t\t\t</ListGroupItem>\n\t\t\t\t<Collapse isOpen={this.state.dropdownOpen}>\n\t\t\t\t\t{sortedFiles.map((edges) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t((localizer.lang === \"en_CA\") && (edges.node.frontmatter.lang === \"en\")) ||\n\t\t\t\t\t\t\t((localizer.lang === \"fr_CA\") && (edges.node.frontmatter.lang === \"fr\"))\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ListGroupItem active={path === edges.node.frontmatter.path} style={{ \"padding-left\": \"2rem\",  \"border\": \"0px\" }}>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tto={edges.node.frontmatter.path}\n\t\t\t\t\t\t\t\t\t\tactiveStyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{edges.node.frontmatter.title}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</Collapse>\n\t\t\t</ListGroup>\n\t\t);\n\t}\n}\nexport default Subnav;\n"],"sourceRoot":""}