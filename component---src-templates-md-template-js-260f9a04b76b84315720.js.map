{"version":3,"sources":["webpack:///./src/components/subnav.js","webpack:///./src/components/sidenav.js","webpack:///./src/templates/mdTemplate.js"],"names":["subnav_Subnav","Subnav","props","_this","_React$Component","call","this","toggle","bind","assertThisInitialized_default","state","dropdownOpen","setState","prevState","render","_this$props","files","nameEn","nameFr","path","i18n","sortedFiles","sort","a","b","parseInt","node","frontmatter","subnav","split","react_default","createElement","reactstrap_es","p","q","onClick","className","style","border","language","j","isOpen","map","edges","lang","active","padding-left","gatsby_browser_entry","to","activeStyle","color","title","Component","Object","es","sidenav","query","data","subNameEn","subNameFr","subGroup","subPieces","forEach","push","length","r","vertical","_4163922871","_ref","eng","fr","renderAst","rehype_react_default","components","badge","Compiler","layout","u","i","xs","htmlAst","pageQuery"],"mappings":"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","file":"component---src-templates-md-template-js-260f9a04b76b84315720.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport {\n\tCollapse,\n\tListGroup,\n\tListGroupItem\n} from 'reactstrap';\nimport { translate } from \"react-i18next\";\n\nclass Subnav extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.toggle = this.toggle.bind(this);\n\t\tthis.state = {\n\t\t\tdropdownOpen: false\n\t\t};\n\t}\n\n\ttoggle() {\n\t\tthis.setState(prevState => ({\n\t\t\tdropdownOpen: !prevState.dropdownOpen\n\t\t}));\n\t}\n\trender() {\n\t\tconst {\n\t\t\tfiles,\n\t\t\tnameEn,\n\t\t\tnameFr,\n\t\t\tpath,\n\t\t\ti18n, } = this.props;\n\n\t\tconst sortedFiles = files.sort((a, b) =>\n\t\t\tparseInt(a.node.frontmatter.subnav.split('/')[3], 10) - parseInt(b.node.frontmatter.subnav.split('/')[3], 10))\n\t\t\t;\n\t\treturn (\n\t\t\t<ListGroup>\n\t\t\t\t<ListGroupItem onClick={this.toggle} className=\"dropdown-toggle\" style={{\"border\": \"0px\"}}>\n\t\t\t\t\t{(i18n.language === \"en\") ? nameEn : nameFr}\n\t\t\t\t</ListGroupItem>\n\t\t\t\t<Collapse isOpen={this.state.dropdownOpen}>\n\t\t\t\t\t{sortedFiles.map((edges) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t((i18n.language === \"en\") && (edges.node.frontmatter.lang === \"en\")) ||\n\t\t\t\t\t\t\t((i18n.language === \"fr\") && (edges.node.frontmatter.lang === \"fr\"))\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ListGroupItem active={path === edges.node.frontmatter.path} style={{ \"padding-left\": \"2rem\",  \"border\": \"0px\" }}>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tto={edges.node.frontmatter.path}\n\t\t\t\t\t\t\t\t\t\tactiveStyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{edges.node.frontmatter.title}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</Collapse>\n\t\t\t</ListGroup>\n\t\t);\n\t}\n}\nexport default translate(\"default\")(Subnav);\n","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport {\n  Nav,\n  NavItem,\n} from 'reactstrap';\nimport Subnav from './subnav';\nimport { translate } from \"react-i18next\";\n\nconst Sidenav = (props) => (\n\n  <StaticQuery query={graphql`\n        query{\n          component:allMarkdownRemark(\n            filter: {\n              frontmatter: {path: {regex: \"/\\/component\\//\"}}\n            },\n            sort:{\n              fields:[frontmatter___subnav]\n            }\n          ){\n            totalCount\n              edges{\n                node {\n                  frontmatter {\n                    title\n                    path\n                    lang\n                    subnav\n                  }\n                }\n            }\n          }\n          overview:allMarkdownRemark(\n            filter: \n              {frontmatter: {path: {regex: \"/\\/overview\\//\"}}\n            },\n            sort:{\n              fields:[frontmatter___subnav]\n            }\n          ){\n            totalCount\n              edges{\n                node {\n                  frontmatter {\n                    title\n                    path\n                    lang\n                    subnav\n                  }\n                }\n            }\n          }\n          content:allMarkdownRemark(\n            filter: \n            {frontmatter: {path: {regex: \"/\\/content\\//\"}}\n            },\n            sort:{\n              fields:[frontmatter___subnav]\n            }\n          ) {\n            totalCount\n              edges{\n                node {\n                  frontmatter {\n                    title\n                    path\n                    lang\n                    subnav\n                  }\n                }\n            }\n          }\n          identity:allMarkdownRemark(\n            filter: {\n              frontmatter: {path: {regex: \"/\\/identity\\//\"}}\n            },\n            sort:{\n              fields:[frontmatter___subnav]\n            }\n          ) {\n            totalCount\n              edges{\n                node {\n                  frontmatter {\n                    title\n                    path\n                    lang\n                    subnav\n                  }\n                }\n            }\n          }\n          data:allMarkdownRemark(\n            filter: {\n              frontmatter: {path: {regex: \"/\\/data\\//\"}}\n            },\n            sort:{\n              fields:[frontmatter___subnav]\n            }\n          ){\n            totalCount\n              edges{\n                node {\n                  frontmatter {\n                    title\n                    path\n                    lang\n                    subnav\n                  }\n                }\n            }\n          }\n        }\n    `}\n    render={(data) => {\n\n      let subNameEn = \"\";\n      let subNameFr = \"\";\n      let subGroup = [];\n      let subPieces = [];\n      data[props.path.split(\"/\")[1]].edges.forEach((edges) => {\n        if (edges.node.frontmatter.subnav.split(\"/\")[1] !== subNameEn) {\n          if (subNameEn !== \"\") {\n            subPieces.push(\n              <Subnav\n                files={subGroup}\n                nameEn={subNameEn}\n                nameFr={subNameFr}\n                path={props.path}\n              />\n            );\n          }\n          subGroup = [];\n          subNameEn = edges.node.frontmatter.subnav.split(\"/\")[1];\n          subNameFr = edges.node.frontmatter.subnav.split(\"/\")[2];\n        }\n        subGroup.push(edges);\n      });\n      if (subGroup.push.length !== 0) {\n        subPieces.push(\n          <Subnav\n            files={subGroup}\n            nameEn={subNameEn}\n            nameFr={subNameFr}\n            path={props.path}\n          />\n        );\n      }\n      return (\n        <div>\n          <Nav vertical>\n            {subPieces}\n          </Nav>\n        </div>\n      )\n    }}\n  />\n);\n\nexport default translate(\"default\")(Sidenav);\n\n","import React from 'react';\nimport rehypeReact from 'rehype-react';\nimport { Badge } from 'reactstrap';\nimport { graphql } from 'gatsby';\n\nimport Sidenav from '../components/sidenav';\nimport Layout from '../components/layout';\nimport { Container, Row, Col } from 'reactstrap';\nimport { translate } from \"react-i18next\";\nconst Template = ({\n  data, // this prop will be injected by the GraphQL query below.\ni18n }) => {\n  const { eng, fr } = data;\n  const { frontmatter: { path } } = eng;\n  const renderAst = new rehypeReact({\n    createElement: React.createElement,\n    components: { badge: Badge }, //Allows in-markdown render of the Badge component from reactstrap\n  }).Compiler;\n  return (\n    <Layout>\n      <Row>\n        <Col xs=\"3\">\n          <Sidenav path={path} />\n        </Col>\n        <Col>\n          {(i18n.language === \"en\" || fr === null) ?\n            <div className=\"col-sm\">{renderAst(eng.htmlAst)}</div> :\n            <div className=\"col-sm\">{renderAst(fr.htmlAst)}</div>\n          }\n        </Col>\n      </Row>\n    </Layout>\n  );\n}\n\nexport default translate(\"default\")(Template);\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    eng:markdownRemark(frontmatter: { path: { eq: $path }, lang: {eq: \"en\"} }) {\n      html\n      htmlAst\n      frontmatter {\n        path\n        lang\n      }\n    }\n    fr:markdownRemark(frontmatter: { path: { eq: $path }, lang: {eq: \"fr\"} }) {\n      html\n      htmlAst\n      frontmatter {\n        path\n        lang\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}