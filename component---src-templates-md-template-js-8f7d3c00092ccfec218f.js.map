{"version":3,"sources":["webpack:///./src/components/sidenav.js","webpack:///./src/templates/mdTemplate.js"],"names":["sidenav_Sidenav","props","react_default","a","createElement","className","reactstrap_es","i","vertical","navbar","justify","j","gatsby_link_default","to","class","propTypes","data","prop_types_default","string","defaultProps","sidenav","dist_default","Template","_ref","markdownRemark","htmlAst","frontmatter","html","renderAst","rehype_react_default","components","badge","Compiler","layout","pageQuery"],"mappings":"oMAUMA,EAAU,SAACC,GAAD,OACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACE,EAAAC,GAAIC,YAASC,UAAOC,YACnBR,EAAAC,EAAAC,cAACE,EAAAK,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAAT,GAAKU,GAAG,oBAAoBC,MAAM,YAAnC,WAIFZ,EAAAC,EAAAC,cAACE,EAAAK,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAAT,GAAKU,GAAG,oBAAoBC,MAAM,YAAnC,WAIFZ,EAAAC,EAAAC,cAACE,EAAAK,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAAT,GAAKU,GAAG,cAAcC,MAAM,YAA7B,eAIFZ,EAAAC,EAAAC,cAACE,EAAAK,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAAT,GAAKU,GAAG,IAAIC,MAAM,YAAnB,YAIFZ,EAAAC,EAAAC,cAACE,EAAAK,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAAT,GAAKU,GAAG,IAAIC,MAAM,YAAnB,YAQRd,EAAQe,WACNC,KAAMC,EAAAd,EAAUe,QAGlBlB,EAAQmB,cACNH,KAAM,QAGR,IAAAI,EAAeC,IAAmBrB,YC1CnB,SAASsB,EAATC,GAEZ,IACOC,EADPD,EADDP,KAEQQ,eACmBC,GAAYD,EAA/BE,YAA+BF,EAAlBG,KAAkBH,EAAZC,SACrBG,EAAY,IAAIC,EAAA1B,GACpBC,cAAeF,EAAAC,EAAMC,cACrB0B,YAAcC,MAAOzB,EAAAH,KACpB6B,SACH,OACE9B,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,KACED,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACgB,EAAD,MAEAlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUuB,EAAUH,oFAMpC,IAAMS","file":"component---src-templates-md-template-js-8f7d3c00092ccfec218f.js","sourcesContent":["import React from 'react';\nimport Link from 'gatsby-link';\nimport PropTypes from 'prop-types';\nimport LocalizedComponent\n  from '@gctools-components/react-i18n-translation-webpack';\nimport {\n  Nav,\n  NavItem\n} from 'reactstrap';\n\nconst Sidenav = (props) => (\n  <div className=\"col-sm-auto\">\n    <Nav vertical navbar justify>\n      <NavItem>\n        <Link to=\"/component/badges\" class=\"nav-link\">\n          Badges\n        </Link>\n      </NavItem>\n      <NavItem>\n        <Link to=\"/component/search\" class=\"nav-link\">\n          Search\n        </Link>\n      </NavItem>\n      <NavItem>\n        <Link to=\"/component/\" class=\"nav-link\">\n          Components\n        </Link>\n      </NavItem>\n      <NavItem>\n        <Link to=\"/\" class=\"nav-link\">\n          Content\n        </Link>\n      </NavItem>\n      <NavItem>\n        <Link to=\"/\" class=\"nav-link\">\n          Data\n        </Link>\n      </NavItem>\n    </Nav>\n  </div>\n);\n\nSidenav.propTypes = {\n  data: PropTypes.string,\n};\n\nSidenav.defaultProps = {\n  data: 'Data',\n};\n\nexport default LocalizedComponent(Sidenav);\n","import React from 'react';\nimport rehypeReact from 'rehype-react';\nimport { Badge } from 'reactstrap';\nimport { graphql } from 'gatsby';\n\nimport Sidenav from '../components/sidenav';\nimport Layout from '../components/layout';\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data; // data.markdownRemark holds our post data\n  const { frontmatter, html, htmlAst } = markdownRemark;\n  const renderAst = new rehypeReact({\n    createElement: React.createElement,\n    components: { badge: Badge },\n  }).Compiler;\n  return (\n    <Layout>\n      <div className=\"row\">\n        <Sidenav />\n\n        <div className=\"col-sm\">{renderAst(htmlAst)}</div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      htmlAst\n      frontmatter {\n        path\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}