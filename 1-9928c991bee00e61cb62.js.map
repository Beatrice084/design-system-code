{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/search.js","webpack:///./src/components/languageSwitch.js","webpack:///./src/components/header.js","webpack:///./src/components/i18n.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","a","createContext","StaticQuery","props","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","search_Search","Search","_this","_Component","call","this","search","event","target","value","results","getSearchResults","setState","slice","toggle","bind","assertThisInitialized_default","state","dropdownOpen","react_default","reactstrap_es","i","xs","l","isOpen","n","tag","o","type","onChange","placeholder","m","className","length","map","page","q","gatsby_browser_entry","to","path","title","prevState","window","__LUNR__","lunrIndex","lng","index","_ref","ref","store","react","Component","v","E","b","languageSwitch_LanguageSwitcher","LanguageSwitcher","i18n","language","handleChangeLanguage","componentWillReceiveProps","nextProps","changeLanguage","renderLanguageChoice","_this2","code","label","buttonClass","classnames_default","LanguageSwitcher__button--selected","key","onClick","_this3","languageSwitch","Object","es","header_Header","siteTitle","t","k","fluid","dark","color","expand","fixed","r","navbar","s","prop_types_default","defaultProps","header","dist_es","use","i18next_xhr_backend_default","i18next_browser_languagedetector_default","init","fallbackLng","debug","interpolation","escapeValue","wait","bindI18n","bindStore","nsMode","layout_Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","_2317363496","element","__webpack_exports__","R","272","e","module","exports","__webpack_require__","default","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","316","langs","defaultLangKey","325"],"mappings":"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","file":"1-9928c991bee00e61cb62.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, { withPrefix, push, replace, navigateTo } from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  push,\n  replace,\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React, { Component } from 'react';\nimport { Link } from 'gatsby';\nimport {\n    Dropdown,\n    DropdownToggle,\n    DropdownMenu,\n    Input,\n    Col,\n    ListGroupItem\n} from 'reactstrap';\n\n// Search component\nexport default class Search extends Component {\n    constructor(props) {\n        super(props)\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            query: ``,\n            results: [],\n            dropdownOpen: false,\n        }\n    }\n\n    render() {\n        return (\n            <Col xs=\"3\">\n                <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                    <DropdownToggle\n                        tag={Input}\n                        type=\"text\"\n                        value={this.state.query}\n                        onChange={this.search}\n                        placeholder={this.props.placeholder}\n                    />\n                    <DropdownMenu className=\"container-fluid\">\n                        {(this.state.results.length !== 0) ?\n\n                            this.state.results.map(page =>\n                                <ListGroupItem tag={Link} to={page.path}>\n                                    {page.title}\n                                </ListGroupItem>\n                            )\n                            :\n                            <ListGroupItem toggle={false}>\n                                No results were found.\n                            </ListGroupItem>\n                        }\n                    </DropdownMenu>\n                </Dropdown>\n            </Col>\n        )\n    }\n\n\n    toggle() {\n        this.setState(prevState => ({\n            dropdownOpen: !prevState.dropdownOpen\n        }));\n    }\n\n    getSearchResults(query) {\n        if (!query || !window.__LUNR__) return [];\n        this.setState({\n            dropdownOpen: true,\n        })\n        const lunrIndex = window.__LUNR__[this.props.lng];\n        /* const results = lunrIndex.index.query(function () { // you can  customize your search , see https://lunrjs.com/guides/searching.html\n\n            // look for an exact match and apply a large positive boost\n            this.term(query);\n\n            // look for terms that match the beginning of this queryTerm and apply a medium boost\n            this.term(query + \"*\");\n\n            // look for terms that match with an edit distance of 2 and apply a small boost\n            this.term(query + \"~2\");\n        }); */\n        const results = lunrIndex.index.search(`${query}^100 ${query}*^10 ${query}~2`);\n        return results.map(({ ref }) => lunrIndex.store[ref]);\n    }\n\n    search = event => {\n        const query = event.target.value;\n        const results = this.getSearchResults(query);\n        this.setState({\n            results: results.slice(0, 5),\n            query,\n        })\n    }\n}","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { translate } from \"react-i18next\";\n\nclass LanguageSwitcher extends Component {\n  constructor(props) {\n    super(props);\n    const { i18n } = this.props;\n    this.state = { language: i18n.language };\n\n    this.handleChangeLanguage = this.handleChangeLanguage.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ language: nextProps.i18n.language });\n  }\n\n  handleChangeLanguage(lng) {\n    const { i18n } = this.props;\n    i18n.changeLanguage(lng);\n  }\n\n  renderLanguageChoice({ code, label }) {\n    const buttonClass = classNames(\"LanguageSwitcher__button\", {\n      \"LanguageSwitcher__button--selected\": this.state.language === code,\n    });\n\n    return (\n      <button\n        key={code}\n        className={buttonClass}\n        onClick={() => this.handleChangeLanguage(code)}\n      >\n        {label}\n      </button>\n    );\n  }\n\n  render() {\n    const languages = [\n      { code: \"en\", label: \"English\" },\n      { code: \"fr\", label: \"Français\" },\n    ];\n\n    return (\n      <div className=\"LanguageSwitcher\">\n        {languages.map(language => this.renderLanguageChoice(language))}\n      </div>\n    );\n  }\n}\n\nexport default translate(\"LanguageSwitcher\")(LanguageSwitcher);","import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport {\n  Navbar,\n  Nav,\n  NavItem,\n  Container,\n} from 'reactstrap';\nimport Search from './search'\nimport LanguageSwitch from './languageSwitch';\nimport { translate } from \"react-i18next\";\nconst Header = ({ siteTitle, t, i18n }) => (\n  <Container fluid>\n    <Navbar dark color=\"primary\" expand=\"md\" fixed=\"top\">\n      <Link to=\"/#!\" className=\"navbar-brand\">\n        {' '}\n        {siteTitle}{' '}\n      </Link>\n      <div className=\"navbar-collapse\">\n        <Nav navbar>\n          <NavItem>\n            <Link to=\"/overview/whats-new\" className=\"nav-link\">\n              {t(\"Overview\")}\n            </Link>\n          </NavItem>\n          <NavItem>\n            <Link to=\"/#!\" className=\"nav-link\">\n              {t(\"Identity\")}\n            </Link>\n          </NavItem>\n          <NavItem>\n            <Link to=\"/component/badges\" className=\"nav-link\">\n              {t(\"Component\")}\n            </Link>\n          </NavItem>\n          <NavItem>\n            <Link to=\"/content/content-guidelines\" className=\"nav-link\">\n              {t(\"Content\")}\n            </Link>\n          </NavItem>\n        </Nav>\n      </div>\n      <Search\n        lng={(i18n.language === \"en\") ? \"en\" : \"fr\"}\n        placeholder={(i18n.language === \"en\") ? \"Search\" : \"Chercher\"}\n      />\n      <LanguageSwitch />\n    </Navbar>\n  </Container>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: 'Aurora',\n};\n\nexport default translate(\"PageHeader\")(Header);\n","import i18n from \"i18next\";\nimport Backend from \"i18next-xhr-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { reactI18nextModule } from \"react-i18next\";\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(reactI18nextModule) // if not using I18nextProvider\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n    interpolation: {\n      escapeValue: false, // not needed for react!!\n    },\n\n    // react i18next special options (optional)\n    react: {\n      wait: false,\n      bindI18n: 'languageChanged loaded',\n      bindStore: 'added removed',\n      nsMode: 'default'\n    }\n  });\n\n\nexport default i18n;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Header from './header';\nimport '../utils/custom.scss';\nimport { Container } from 'reactstrap';\nimport '../components/i18n';\nconst Layout = ({ children }) => (\n\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            langs\n            defaultLangKey\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        />\n        <Header siteTitle={data.site.siteMetadata.title}/>\n        <Container fluid>{children}</Container>\n      </>\n    )}\n  />\n\n);\n\nLayout.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default Layout;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}