{"version":3,"sources":["webpack:///./src/templates/mdTemplate.js","webpack:///./src/components/sidenav.js"],"names":["_gctools_components_react_i18n_translation_webpack__WEBPACK_IMPORTED_MODULE_5___default","_ref","data","eng","fr","path","frontmatter","renderAst","rehype_react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_0___default","components","badge","reactstrap__WEBPACK_IMPORTED_MODULE_2__","Compiler","_components_layout__WEBPACK_IMPORTED_MODULE_4__","className","_components_sidenav__WEBPACK_IMPORTED_MODULE_3__","localizer","lang","htmlAst","pageQuery","__webpack_exports__","props","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","b","query","render","reactstrap__WEBPACK_IMPORTED_MODULE_6__","i","vertical","navbar","justify","split","edges","map","node","j","to","class","title","_public_static_d_2202426222_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"kPAgCeA,IAtBE,SAAAC,GAEX,IADJC,EACID,EADJC,KAEQC,EAAYD,EAAZC,IAAKC,EAAOF,EAAPE,GACSC,EAAWF,EAAzBG,YAAcD,KAChBE,EAAY,IAAIC,EAAAC,GACpBC,cAAeC,EAAAF,EAAMC,cACrBE,YAAcC,MAAOC,EAAAL,KACpBM,SACH,OACEJ,EAAAF,EAAAC,cAACM,EAAAP,EAAD,KACEE,EAAAF,EAAAC,cAAA,OAAKO,UAAU,OACbN,EAAAF,EAAAC,cAACQ,EAAAT,GAAQJ,KAAMA,IACM,UAAnBc,EAAUC,KACVT,EAAAF,EAAAC,cAAA,OAAKO,UAAU,UAAUV,EAAUJ,EAAIkB,UACvCV,EAAAF,EAAAC,cAAA,OAAKO,UAAU,UAAUV,EAAUH,EAAGiB,cAQzC,IAAMC,gNCoFbC,EAAAd,EAAeT,IA1GC,SAACwB,GAAD,OACdC,EAAAhB,EAAAC,cAACgB,EAAAC,GAAYC,MAAA,aAgEXC,OAAQ,SAAA3B,GAAA,OACNuB,EAAAhB,EAAAC,cAAA,OAAKO,UAAU,eACbQ,EAAAhB,EAAAC,cAACoB,EAAAC,GAAIC,YAASC,UAAOC,YAGjBhC,EAAKsB,EAAMnB,KAAK8B,MAAM,KAAK,IAAIC,MAAMC,IAAI,SAACD,GACxC,MAAwB,UAAnBjB,EAAUC,MAAsD,OAAhCgB,EAAME,KAAKhC,YAAYc,KAExDK,EAAAhB,EAAAC,cAACoB,EAAAS,EAAD,KACEd,EAAAhB,EAAAC,cAACgB,EAAAjB,GAAK+B,GAAIJ,EAAME,KAAKhC,YAAYD,KAAMoC,MAAM,YAC1CL,EAAME,KAAKhC,YAAYoC,QAMP,UAAnBvB,EAAUC,MAAsD,OAAhCgB,EAAME,KAAKhC,YAAYc,KAEzDK,EAAAhB,EAAAC,cAACoB,EAAAS,EAAD,KACEd,EAAAhB,EAAAC,cAACgB,EAAAjB,GAAK+B,GAAIJ,EAAME,KAAKhC,YAAYD,KAAMoC,MAAM,YAC1CL,EAAME,KAAKhC,YAAYoC,oBApF5CxC,KAAAyC","file":"component---src-templates-md-template-js-96d9f26dc1d148b8d8cd.js","sourcesContent":["import React from 'react';\nimport rehypeReact from 'rehype-react';\nimport { Badge } from 'reactstrap';\nimport { graphql } from 'gatsby';\n\nimport Sidenav from '../components/sidenav';\nimport Layout from '../components/layout';\nimport LocalizedComponent\n  from '@gctools-components/react-i18n-translation-webpack';\n\nconst Template = ({\n  data, // this prop will be injected by the GraphQL query below.\n}) => {\n  const { eng, fr } = data; // data.markdownRemark holds our post data\n  const { frontmatter:{ path } } = eng;\n  const renderAst = new rehypeReact({\n    createElement: React.createElement,\n    components: { badge: Badge },\n  }).Compiler;\n  return (\n    <Layout>\n      <div className=\"row\">\n        <Sidenav path={path} />\n        {(localizer.lang === \"en_CA\") ?\n          <div className=\"col-sm\">{renderAst(eng.htmlAst)}</div>:\n          <div className=\"col-sm\">{renderAst(fr.htmlAst)}</div>\n      }\n      </div>\n    </Layout>\n  );\n}\n\nexport default LocalizedComponent(Template);\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    eng:markdownRemark(frontmatter: { path: { eq: $path }, lang: {eq: \"en\"} }) {\n      html\n      htmlAst\n      frontmatter {\n        path\n        lang\n      }\n    }\n    fr:markdownRemark(frontmatter: { path: { eq: $path }, lang: {eq: \"fr\"} }) {\n      html\n      htmlAst\n      frontmatter {\n        path\n        lang\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport LocalizedComponent\n  from '@gctools-components/react-i18n-translation-webpack';\nimport {\n  Nav,\n  NavItem\n} from 'reactstrap';\n\n\nconst Sidenav = (props) => (\n  <StaticQuery query={graphql`\n  query{\n    component:allMarkdownRemark(filter: {frontmatter: {path: {regex: \"/component/\"}}}) {\n      totalCount\n        edges{\n          node {\n            frontmatter {\n              title\n              path\n              lang\n            }\n          }\n      }\n    }\n    overview:allMarkdownRemark(filter: {frontmatter: {path: {regex: \"/overview/\"}}}) {\n      totalCount\n        edges{\n          node {\n            frontmatter {\n              title\n              path\n              lang\n            }\n          }\n      }\n    }\n    content:allMarkdownRemark(filter: {frontmatter: {path: {regex: \"/content/\"}}}) {\n      totalCount\n        edges{\n          node {\n            frontmatter {\n              title\n              path\n              lang\n            }\n          }\n      }\n    }\n    identity:allMarkdownRemark(filter: {frontmatter: {path: {regex: \"/identity/\"}}}) {\n      totalCount\n        edges{\n          node {\n            frontmatter {\n              title\n              path\n              lang\n            }\n          }\n      }\n    }\n    data:allMarkdownRemark(filter: {frontmatter: {path: {regex: \"/data/\"}}}) {\n      totalCount\n        edges{\n          node {\n            frontmatter {\n              title\n              path\n              lang\n            }\n          }\n      }\n    }\n  }\n    `}\n    render={data => (\n      <div className=\"col-sm-auto\">\n        <Nav vertical navbar justify>\n          {\n           \n            data[props.path.split(\"/\")[1]].edges.map((edges) => {\n              if ((localizer.lang === \"en_CA\") && (edges.node.frontmatter.lang === \"en\"))\n                return (\n                  <NavItem>\n                    <Link to={edges.node.frontmatter.path} class=\"nav-link\">\n                      {edges.node.frontmatter.title}\n                    </Link>\n\n                  </NavItem>\n                );\n              else\n                if((localizer.lang === \"fr_CA\") && (edges.node.frontmatter.lang === \"fr\"))\n                return (\n                  <NavItem>\n                    <Link to={edges.node.frontmatter.path} class=\"nav-link\">\n                      {edges.node.frontmatter.title}\n                    </Link>\n\n                  </NavItem>)\n            }\n            )\n          }\n        </Nav>\n      </div>\n    )}\n  />\n);\n\n/* Sidenav.propTypes = {\n  data: PropTypes.string,\n};\n\nSidenav.defaultProps = {\n  data: 'Data',\n}; */\n\nexport default LocalizedComponent(Sidenav);\n\n"],"sourceRoot":""}